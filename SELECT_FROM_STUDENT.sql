--current date
SELECT CURRENT_DATE;

SELECT *FROM STUDENT;

--SELECT AGE BASED ON BIRTHDAY
--FUNCTION 'AGE' SUB BETWEEN CURRENT DATE AND DATE_OF_BIRTH
SELECT EXTRACT (YEAR FROM AGE(DATE_OF_BIRTH))
FROM STUDENT;

--SELECT MIN/MAX AGE
SELECT MIN(AGE) FROM STUDENT;
SELECT MAX(AGE) FROM STUDENT;


--SELECT STUDENT WITH MIN AGE
SELECT * FROM STUDENT WHERE AGE = (SELECT MIN(AGE) FROM STUDENT); 

--SELECT STUDENTS WITH AGE BIGGER THAN AVERAGE
SELECT * FROM STUDENT WHERE AGE > (SELECT AVG(AGE) FROM STUDENT); 

--SELECT AVERAGE AGE BY PROFFESION
SELECT JOB, AVG(AGE) AS AVG_AGE FROM STUDENT GROUP BY JOB;

--SELECT NUMBER OF STUDENTS BY PROFESSION
SELECT JOB, COUNT(*) FROM STUDENT GROUP BY JOB;

--SELECT AVERAGE AGE BY PROFFESION WITHOUT 'JOHN'
SELECT JOB, AVG(AGE) AS AVG_AGE 
FROM STUDENT
WHERE FIRST_NAME != 'John'
GROUP BY JOB;

--SELECT AVERAGE AGE BY PROFFESION sort by order
SELECT JOB, AVG(AGE) AS AVG_AGE, COUNT(*) AS COUNT_STD 
FROM STUDENT 
GROUP BY JOB
ORDER BY COUNT_STD, AVG_AGE DESC;

--COUNT THE NUMBER OF PAIRS LAST_NAME + JOB
SELECT JOB, FIRST_NAME, COUNT(*)
FROM STUDENT
GROUP BY JOB, FIRST_NAME;

--SELECT AVG AGE FOR PROFESSION HAVING NUMBER OF STUDENTS BIGGER THAN 1
SELECT JOB, AVG(AGE) AS AVG_AGE 
FROM STUDENT
GROUP BY JOB
HAVING COUNT(*)>1;

--SELECT INFO FOR STUDENTS WITH AVG AGE 25
SELECT JOB
FROM STUDENT
GROUP BY JOB
HAVING AVG(AGE) > 25;

SELECT FIRST_NAME || ' '||LAST_NAME, AGE, JOB
FROM STUDENT
WHERE JOB IN (SELECT JOB
				FROM STUDENT
				GROUP BY JOB
				HAVING AVG(AGE) > 32);
				
